name: Pull Request Validation

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]  
        java: [8, 11, 17] 
        exclude:
          - os: windows-latest
            java: 8

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
      id: java-cache

    - name: Prepare directories
      run: |
        mkdir -p bin
        mkdir -p bin-tests
        echo "Project structure:"
        ls -R src tests *-randoop || echo "Some directories may not exist yet"

    - name: Compile main code
      run: |
        find src -name "*.java" > sources.txt || echo "No Java files found in src/"
        if [ -s sources.txt ]; then
          javac -d bin -encoding UTF-8 @sources.txt
        else
          echo "::warning::No main Java files to compile"
        fi

    - name: Compile tests (OS-aware)
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          CP_SEP=";"
          FIND_CMD="dir /s /b *.java"
        else
          CP_SEP=":"
          FIND_CMD="find . -name '*.java'"
        fi

        echo "Looking for manual tests..."
        $FIND_CMD | grep -e "^tests/" > manual_tests.txt || true
        if [ -s manual_tests.txt ]; then
          javac -d bin-tests -encoding UTF-8 -cp "bin${CP_SEP}lib/junit-platform-console-standalone-1.12.0.jar" @manual_tests.txt
        else
          echo "::notice::No manual tests found in tests/"
        fi

        echo "Looking for Randoop tests..."
        $FIND_CMD | grep -e "-randoop/" > randoop_tests.txt || true
        if [ -s randoop_tests.txt ]; then
          javac -d bin-tests -encoding UTF-8 -cp "bin${CP_SEP}lib/junit-platform-console-standalone-1.12.0.jar" @randoop_tests.txt
        else
          echo "::notice::No Randoop tests found in *-randoop/"
        fi

    - name: Run tests (JUnit 5)
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          CP_SEP=";"
        else
          CP_SEP=":"
        fi

        if [ ! -f lib/junit-platform-console-standalone-1.12.0.jar ]; then
          echo "::error::Missing required JAR: junit-platform-console-standalone-1.12.0.jar"
          exit 1
        fi

        echo "=== Running JUnit 5 tests ==="
        java -jar lib/junit-platform-console-standalone-1.12.0.jar \
          --class-path "bin${CP_SEP}bin-tests" \
          --scan-class-path || echo "::warning::Some tests failed"
